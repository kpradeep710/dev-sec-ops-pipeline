version: 0.2
phases:
  install:
    commands:
      - echo "Installing security tools..."
      - curl -Lo kubelinter.tar.gz https://github.com/stackrox/kube-linter/releases/latest/download/kube-linter-linux.tar.gz
      - tar -xzf kubelinter.tar.gz && mv kube-linter /usr/local/bin/
      - curl -L https://github.com/hadolint/hadolint/releases/latest/download/hadolint-Linux-x86_64 -o /usr/local/bin/hadolint
      - chmod +x /usr/local/bin/hadolint
      - curl -I https://ci-tools.anchore.io/quickstart.sh
      - docker login || true
      - echo "Pulling OWASP ZAP Docker image..."
      - docker pull owasp/zap || true
      - echo "Installing Java ..."
      - yum install java -y 
      - echo "Installing SonarQube Scanner..."
      - wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-10.6.zip
      - unzip sonarqube-10.6.zip
      - mv sonarqube-10.6/opt/sonar-scanner
      - echo "export PATH=/opt/sonar-scanner/bin:$PATH" >> ~/.bashrc
      - export PATH=/opt/sonar-scanner/bin:$PATH
      - sonar-scanner -v

  pre_build:
    commands:
      - echo "Running SonarQube SAST scan..."
      - sonar-scanner -Dsonar.projectKey=nani-project -Dsonar.sources=. -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN
      - echo "SonarQube scan completed."

      - echo "Linting Dockerfile with Hadolint..."
      - hadolint Dockerfile || true
      - echo "Dockerfile linting completed."

      - echo "Logging in to Amazon ECR..."
      - aws --version
      - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 970547349158.dkr.ecr.ap-south-1.amazonaws.com
      - REPOSITORY_URI=970547349158.dkr.ecr.ap-south-1.amazonaws.com/dev-sec-ops-repo

  build:
    commands:
      - echo "Building Docker image..."
      - docker build -t dev-sec-ops-repo .
      - docker tag dev-sec-ops-repo:latest 970547349158.dkr.ecr.ap-south-1.amazonaws.com/dev-sec-ops-repo:latest
      - echo "Docker image built successfully."

      - echo "Scanning Docker image with Anchore..."
      - anchore-cli image add $REPOSITORY_URI:latest
      - anchore-cli image wait $REPOSITORY_URI:latest
      - anchore-cli image vuln $REPOSITORY_URI:latest all || true
      - echo "Docker image scanning completed."

      - echo "Scanning Kubernetes Manifests with Kubelinter..."
      - kube-linter lint deploy.yml || true
      - echo "Kubernetes manifest scanning completed."

  post_build:
    commands:
      - echo "Pushing Docker image to ECR..."
      - docker push 970547349158.dkr.ecr.ap-south-1.amazonaws.com/dev-sec-ops-repo:latest
      - echo "Docker image pushed successfully."

      - echo "Updating Kubernetes deployment..."
      - aws eks update-kubeconfig --region ap-south-1 --name dev-cluster
      - sed -i "s|apache2|$REPOSITORY_URI:latest|g" deployment.yml
      - kubectl apply -f deployment.yml --validate=false
      - echo "Deployment successful!"

      - echo "Running OWASP ZAP DAST Scan..."
      - docker run --rm -v $(pwd):/zap/wrk:rw owasp/zap2docker-stable zap-baseline.py -t https://your-app-url.com -r zap-report.html || true
      - aws s3 cp zap-report.html s3://$S3_BUCKET/
      - echo "DAST scan completed and results uploaded to S3."

artifacts:
  files:
    - zap-report.html
    - imagedefinitions.json
